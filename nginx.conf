server {

    listen 80 default_server;


    server_name  localhost;


    return 301 https://$host$request_uri;

}

###PROXY-START###
server {
    server_name  localhost igang.site, www.igang.site;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/igang.site/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/igang.site/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

###QBIT-PROXY###
location /qbit/ {
    proxy_pass            http://qbittorrent:5080/;
    proxy_http_version    1.1;

    proxy_set_header      Host               qbittorrent:5080;
    proxy_set_header      X-Forwarded-Host   $http_host;
    proxy_set_header      X-Forwarded-For    $remote_addr;
    proxy_cookie_path     /                  "/; Secure";
}


###JELLYFIN-PROXY###
location / {
    proxy_pass http://jellyfin:8096;

    proxy_pass_request_headers on;

    proxy_set_header Host $host;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $http_host;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;

    # Disable buffering when the nginx proxy gets very resource heavy upon streaming
    proxy_buffering off;
}

###RADARR-PROXY###
location /radarr {
    proxy_pass http://radarr:7878/radarr;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

###SONAR-PROXY###
location /sonarr {
    proxy_pass http://sonarr:8989/sonarr;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

###PROWLARR-PROXY###
location /prowlarr {
    proxy_pass http://prowlarr:9696/prowlarr;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }


###PROXY-END###

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
